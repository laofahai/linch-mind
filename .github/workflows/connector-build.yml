name: 🔗 Connector Build

on:
  push:
    branches: [ main ]
    paths:
      - 'connectors/official/**'
      - 'connectors/community/**'

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd connectors
          pip install poetry pyyaml pyinstaller
          poetry install

      - name: Detect changes and bump versions
        id: detect
        run: |
          cd connectors
          
          # 检测变更的连接器（支持official和community）
          changed_files=$(git diff --name-only HEAD~1 HEAD | grep -E '^connectors/(official|community)/' || true)
          
          if [ -z "$changed_files" ]; then
            echo "No connector changes detected"
            echo "changed_connectors=" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 提取连接器路径
          changed_connectors=""
          for file in $changed_files; do
            if [[ $file =~ ^connectors/(official|community)/([^/]+)/ ]]; then
              connector_type="${BASH_REMATCH[1]}"
              connector_name="${BASH_REMATCH[2]}"
              connector_path="$connector_type/$connector_name"
              changed_connectors="$changed_connectors $connector_path"
            fi
          done
          
          changed_connectors=$(echo "$changed_connectors" | tr ' ' '\n' | sort -u | tr '\n' ' ' | xargs)
          echo "Changed connectors: $changed_connectors"
          echo "changed_connectors=$changed_connectors" >> $GITHUB_OUTPUT
          
          # 使用外部脚本进行版本管理
          for connector_path in $changed_connectors; do
            if [ -f "$connector_path/connector.json" ]; then
              echo "🔢 Updating version for $connector_path"
              python scripts/version_manager.py "$connector_path/connector.json" --bump patch
            fi
          done

      - name: Build connectors  
        if: steps.detect.outputs.changed_connectors != ''
        run: |
          cd connectors
          mkdir -p release/dist
          
          # 构建变更的连接器
          for connector_path in ${{ steps.detect.outputs.changed_connectors }}; do
            echo "🚀 Building connector: $connector_path"
            
            if [ -f "$connector_path/connector.json" ] && [ -f "$connector_path/main.py" ]; then
              # 读取连接器配置
              connector_id=$(python -c "import json; print(json.load(open('$connector_path/connector.json'))['id'])")
              echo "📦 Building $connector_id from $connector_path"
              
              # 使用构建脚本
              python scripts/connector_builder.py "$connector_path" --output "release/dist" || {
                echo "❌ Build failed for $connector_path, continuing with others..."
                continue
              }
            else
              echo "⚠️ Missing required files for $connector_path, skipping..."
            fi
          done

      - name: Generate registry
        if: steps.detect.outputs.changed_connectors != ''
        run: |
          cd connectors
          
          # 使用外部脚本生成注册表
          python scripts/registry_generator.py --output release/registry.json --format

      - name: Commit changes
        if: steps.detect.outputs.changed_connectors != ''
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add connectors/
          git commit -m "chore: auto-update connector versions [skip ci] - Updated: ${{ steps.detect.outputs.changed_connectors }}"
          git push

      - name: Upload artifacts
        if: steps.detect.outputs.changed_connectors != ''
        uses: actions/upload-artifact@v4
        with:
          name: connectors-release
          path: |
            connectors/release/dist/
            connectors/release/registry.json