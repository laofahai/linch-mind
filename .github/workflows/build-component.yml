name: ðŸ”¨ Component Build (Reusable)

on:
  workflow_call:
    inputs:
      component:
        description: 'Component to build (connectors, daemon, flutter)'
        required: true
        type: string
      version:
        description: 'Version to build'
        required: true
        type: string
      build_mode:
        description: 'Build mode (debug, profile, release)'
        required: false
        default: 'release'
        type: string
    outputs:
      build_status:
        description: 'Build status'
        value: ${{ jobs.build-component.outputs.status }}
      artifacts_path:
        description: 'Path to build artifacts'
        value: ${{ jobs.build-component.outputs.artifacts_path }}

env:
  FLUTTER_VERSION: "3.24.3"
  PYTHON_VERSION: "3.11"

jobs:
  build-component:
    name: ðŸ”¨ Build ${{ inputs.component }}
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.build.outputs.status }}
      artifacts_path: ${{ steps.build.outputs.artifacts_path }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build connectors
        if: inputs.component == 'connectors'
        run: |
          echo "ðŸ”Œ Building connectors for version ${{ inputs.version }}"
          
          # Use existing connector build workflow
          cd scripts
          python build-connectors.py build-all --platforms linux windows macos
          
          echo "status=success" >> $GITHUB_OUTPUT
          echo "artifacts_path=dist/connectors" >> $GITHUB_OUTPUT
        id: build-connectors
      
      - name: Build daemon
        if: inputs.component == 'daemon'
        run: |
          echo "ðŸ”§ Building daemon for version ${{ inputs.version }}"
          
          # Set up Python and Poetry
          python -m pip install --upgrade pip
          pip install poetry
          
          cd daemon
          poetry install --only=main
          
          # Build wheel package
          poetry build
          
          # Create distribution info
          mkdir -p ../dist/daemon
          cp dist/* ../dist/daemon/
          
          echo "Docker image: ghcr.io/linch-mind/daemon:${{ inputs.version }}" > ../dist/daemon/docker-info.txt
          
          echo "status=success" >> $GITHUB_OUTPUT
          echo "artifacts_path=dist/daemon" >> $GITHUB_OUTPUT
        id: build-daemon
      
      - name: Build Flutter
        if: inputs.component == 'flutter'
        run: |
          echo "ðŸš€ Building Flutter for version ${{ inputs.version }}"
          
          # Setup Flutter
          git clone https://github.com/flutter/flutter.git -b stable --depth 1 /opt/flutter
          export PATH="/opt/flutter/bin:$PATH"
          
          # Enable platforms
          flutter config --enable-linux-desktop
          flutter config --enable-windows-desktop
          flutter config --enable-macos-desktop
          
          cd ui
          flutter pub get
          
          # Build for Linux (since we're on Ubuntu)
          flutter build linux --${{ inputs.build_mode }}
          
          # Package the build
          mkdir -p ../dist/flutter
          cd build/linux/x64/${{ inputs.build_mode }}/bundle
          tar -czf ../../../../../dist/flutter/linch-mind-${{ inputs.version }}-linux-x64.tar.gz *
          
          echo "status=success" >> $GITHUB_OUTPUT
          echo "artifacts_path=dist/flutter" >> $GITHUB_OUTPUT
        id: build-flutter
      
      - name: Set overall build status
        id: build
        run: |
          if [ "${{ inputs.component }}" = "connectors" ]; then
            echo "status=${{ steps.build-connectors.outputs.status }}" >> $GITHUB_OUTPUT
            echo "artifacts_path=${{ steps.build-connectors.outputs.artifacts_path }}" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.component }}" = "daemon" ]; then
            echo "status=${{ steps.build-daemon.outputs.status }}" >> $GITHUB_OUTPUT
            echo "artifacts_path=${{ steps.build-daemon.outputs.artifacts_path }}" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.component }}" = "flutter" ]; then
            echo "status=${{ steps.build-flutter.outputs.status }}" >> $GITHUB_OUTPUT
            echo "artifacts_path=${{ steps.build-flutter.outputs.artifacts_path }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.component }}-builds
          path: dist/${{ inputs.component }}/
          retention-days: 30