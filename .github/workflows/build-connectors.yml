name: Build and Release Connectors

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths:
      - 'connectors/**'
      - 'scripts/build-connectors.py'
  pull_request:
    paths:
      - 'connectors/**'
      - 'scripts/build-connectors.py'
  workflow_dispatch:

env:
  REGISTRY_URL: ${{ vars.REGISTRY_URL || 'http://localhost:8001' }}
  DAEMON_URL: ${{ vars.DAEMON_URL || 'http://localhost:8000' }}
  PYTHON_VERSION: "3.11"

jobs:
  # 验证连接器配置
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema
      
      - name: Validate connector schemas
        run: |
          python3 scripts/connector-dev.py validate filesystem
          python3 scripts/connector-dev.py validate clipboard
      
      - name: List connectors
        run: python3 scripts/connector-dev.py list

  # 多平台构建
  build:
    needs: validate
    strategy:
      matrix:
        os: [windows-2022, macos-12, ubuntu-22.04]
        
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
      
      - name: Install connector dependencies
        run: |
          cd connectors/official/filesystem && pip install -r requirements.txt
          cd ../clipboard && pip install -r requirements.txt
      
      - name: Build connectors
        run: python3 scripts/build-connectors.py build-all
      
      - name: List build outputs
        run: python3 scripts/build-connectors.py list
      
      - name: Package connectors
        run: python3 scripts/build-connectors.py package
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: connectors-${{ runner.os }}-${{ runner.arch }}
          path: |
            linch-mind-connectors-*.zip
            dist/connectors/**/*
          retention-days: 30

  # 发布（仅在标签推送时）
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/**/*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}

  # 质量检查
  quality:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest flake8 black
      
      - name: Code formatting check
        run: |
          black --check connectors/
          black --check scripts/
      
      - name: Lint code
        run: |
          flake8 connectors/ --max-line-length=120 --extend-ignore=E203,W503
          flake8 scripts/ --max-line-length=120 --extend-ignore=E203,W503
      
      - name: Run connector tests
        run: |
          cd connectors/official/filesystem && python -m pytest tests/ -v || echo "No tests found"
          cd ../clipboard && python -m pytest tests/ -v || echo "No tests found"

  # 安全扫描
  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
      
      - name: Security scan with Bandit
        run: bandit -r connectors/ scripts/ -f json -o bandit-report.json || true
      
      - name: Check dependencies for security issues
        run: |
          cd connectors/official/filesystem && safety check -r requirements.txt || true
          cd ../clipboard && safety check -r requirements.txt || true
      
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
          retention-days: 30