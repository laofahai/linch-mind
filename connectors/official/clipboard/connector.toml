# Linch Mind - 剪贴板连接器配置
# 高性能C++剪贴板监控连接器，实时捕获剪贴板内容变化

[metadata]
id = "clipboard"
name = "剪贴板连接器"
version = "0.1.1" 
author = "Linch Mind Team"
description = "高性能C++剪贴板监控连接器，实时捕获剪贴板内容并建立智能关联"
homepage = "https://github.com/linch-mind/connectors/clipboard"
license = "MIT"
category = "system_integration"
icon = "content_paste"

# JSON Schema 引用
schema = "../../connector.schema.json"

[build]
build_command = "./build.sh"
pre_build = "echo 'Preparing C++ clipboard monitoring build'"
post_build = "echo 'Clipboard connector build completed'"

[capabilities]
hot_reload = true
max_instances = 1  # 剪贴板连接器只能有一个实例
supports_multiple_instances = false

# 权限要求
permissions = [
    "system:clipboard:read",
    "network:daemon-api"
]

# 平台支持
[platforms.linux]
min_version = "ubuntu-20.04"

[platforms.macos] 
min_version = "10.15"

[platforms.windows]
min_version = "10"

# 入口点配置
[entry.development]
command = "bash"
working_dir = "."
args = [
    "-c",
    """# Smart build and run for clipboard
exe_name='linch-mind-clipboard'
[[ '$OSTYPE' == 'msys' || '$OSTYPE' == 'win32' ]] && exe_name='$exe_name.exe'

# Check if build is needed
if [[ ! -f "bin/release/$exe_name" && ! -f "bin/debug/$exe_name" ]] || [[ src/main.cpp -nt "bin/release/$exe_name" ]] || [[ src/main.cpp -nt "bin/debug/$exe_name" ]]; then
  echo '🔨 Building clipboard connector...'
  ./build.sh > /dev/null 2>&1 || { echo 'Build failed'; exit 1; }
fi

# Run the newest build
if [[ -f "bin/debug/$exe_name" ]]; then
  exec "./bin/debug/$exe_name"
elif [[ -f "bin/release/$exe_name" ]]; then
  exec "./bin/release/$exe_name"
else
  echo '❌ No clipboard executable found after build'
  exit 1
fi"""
]

[entry.production]
linux = "bin/release/linch-mind-clipboard"
macos = "bin/release/linch-mind-clipboard"
windows = "bin/release/linch-mind-clipboard.exe"

# 默认配置值 - 简单直接
[config_default_values]
max_content_length = 50000             # 最大内容长度

# 配置模式定义 - 极简配置
[config_schema]
description = "剪贴板连接器配置"
title = "剪贴板连接器"
type = "object"

[config_schema.properties.max_content_length]
title = "最大内容长度"
description = "超过此长度的内容将被截断"
type = "integer"
minimum = 1000
maximum = 1000000
default = 50000

config_schema.required = ["max_content_length"]