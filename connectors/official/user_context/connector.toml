# Linch Mind - 用户情境感知连接器配置
# 高性能用户情境感知连接器，实时监控用户活动、设备状态和工作模式

[metadata]
id = "user_context"
name = "用户情境感知连接器"
version = "1.0.0"
author = "Linch Mind Team"
description = "事件驱动的用户情境感知连接器，监控前台应用、设备状态、工作模式等用户相关数据"
homepage = "https://github.com/linch-mind/connectors/user_context"
license = "MIT"
category = "user_activity"
icon = "person"

# JSON Schema 引用
schema = "../../connector.schema.json"

[build]
build_command = "./build.sh"
pre_build = "echo 'Preparing Objective-C++ build environment'"
post_build = "echo 'User context build completed, event-driven monitoring ready'"

[capabilities]
hot_reload = true
max_instances = 1
supports_multiple_instances = false

# 权限要求 - 专注用户行为监控
permissions = [
    "accessibility:read",
    "applications:monitor",
    "windows:focus",
    "network:daemon-api"
]

# 平台支持
[platforms.linux]
min_version = "ubuntu-20.04"

[platforms.macos]
min_version = "10.15"

[platforms.windows]
min_version = "10"

# 入口点配置
[entry.development]
command = "bash"
working_dir = "."
args = [
    "-c",
    """# Smart build and run
exe_name='linch-mind-user-context'
[[ '$OSTYPE' == 'msys' || '$OSTYPE' == 'win32' ]] && exe_name='$exe_name.exe'

# Check if build is needed
if [[ ! -f "bin/release/$exe_name" && ! -f "bin/debug/$exe_name" ]] || [[ src/main.cpp -nt "bin/release/$exe_name" ]] || [[ src/main.cpp -nt "bin/debug/$exe_name" ]]; then
  echo '🔨 Building connector...'
  ./build.sh > /dev/null 2>&1 || { echo 'Build failed'; exit 1; }
fi

# Run the newest build
if [[ -f "bin/debug/$exe_name" ]]; then
  exec "./bin/debug/$exe_name"
elif [[ -f "bin/release/$exe_name" ]]; then
  exec "./bin/release/$exe_name"
else
  echo '❌ No executable found after build'
  exit 1
fi"""
]

[entry.production]
linux = "bin/release/linch-mind-user-context"
macos = "bin/release/linch-mind-user-context"
windows = "bin/release/linch-mind-user-context.exe"

# 默认配置值 - 专注用户行为分析
[config_default_values]
enable_app_monitoring = true       # 启用前台应用监控
enable_window_focus_tracking = true    # 启用窗口焦点跟踪
activity_summary_interval_hours = 2    # 活动摘要生成间隔（小时）
work_pattern_analysis = true       # 启用工作模式分析
app_usage_tracking = true          # 启用应用使用统计
privacy_mode = "balanced"          # 隐私模式: minimal, balanced, detailed
focus_session_detection = true     # 启用专注会话检测
productivity_metrics = true        # 启用生产力指标

# 配置模式定义
[config_schema]
description = "用户情境感知连接器的配置选项"
title = "用户情境感知连接器配置"
type = "object"
config_schema_source = "static"

[config_schema.properties.enable_app_monitoring]
title = "启用应用监控"
description = "监控前台应用切换和使用时长"
type = "boolean"
default = true

[config_schema.properties.enable_window_focus_tracking]
title = "启用窗口焦点跟踪"
description = "跟踪窗口焦点变化，分析工作切换模式"
type = "boolean"
default = true

[config_schema.properties.activity_summary_interval_hours]
title = "活动摘要间隔 (小时)"
description = "生成用户活动模式摘要的时间间隔"
type = "integer"
minimum = 1
maximum = 24
default = 2

[config_schema.properties.work_pattern_analysis]
title = "工作模式分析"
description = "分析用户的工作习惯和效率模式"
type = "boolean"
default = true

[config_schema.properties.app_usage_tracking]
title = "应用使用统计"
description = "统计各应用的使用时长和频率"
type = "boolean"
default = true

[config_schema.properties.focus_session_detection]
title = "专注会话检测"
description = "检测和分析用户的专注工作时段"
type = "boolean"
default = true

[config_schema.properties.productivity_metrics]
title = "生产力指标"
description = "计算生产力相关的量化指标"
type = "boolean"
default = true

[config_schema.properties.privacy_mode]
title = "隐私模式"
description = "数据收集的隐私级别"
type = "string"
enum = ["minimal", "balanced", "detailed"]
default = "balanced"

# 必需配置字段
config_schema.required = []

# UI配置模式
[config_ui_schema]
ui_layout = "sections"

# UI节段配置
[config_ui_schema.ui_sections.monitoring_config]
ui_title = "监控设置"
ui_icon = "monitor"
ui_description = "配置用户情境感知的监控选项"
ui_collapsible = false

[config_ui_schema.ui_sections.monitoring_config.ui_fields.enable_app_monitoring]
ui_widget = "switch"
ui_help = "监控前台应用变化，分析应用使用模式"

[config_ui_schema.ui_sections.monitoring_config.ui_fields.enable_window_focus_tracking]
ui_widget = "switch"
ui_help = "跟踪窗口焦点，了解工作切换频率"

[config_ui_schema.ui_sections.monitoring_config.ui_fields.work_pattern_analysis]
ui_widget = "switch"
ui_help = "分析工作习惯，识别高效时段"

[config_ui_schema.ui_sections.monitoring_config.ui_fields.app_usage_tracking]
ui_widget = "switch"
ui_help = "统计应用使用时长，优化工作流程"

[config_ui_schema.ui_sections.monitoring_config.ui_fields.privacy_mode]
ui_widget = "select"
ui_help = "控制数据收集的详细程度，保护用户隐私"

[config_ui_schema.ui_sections.analysis_config]
ui_title = "分析配置"
ui_icon = "analytics"
ui_description = "配置用户行为分析和生产力指标"
ui_collapsed = false
ui_collapsible = true

[config_ui_schema.ui_sections.analysis_config.ui_fields.focus_session_detection]
ui_widget = "switch"
ui_help = "检测专注工作时段，提供效率改进建议"

[config_ui_schema.ui_sections.analysis_config.ui_fields.productivity_metrics]
ui_widget = "switch"
ui_help = "计算生产力指标，量化工作效率"

[config_ui_schema.ui_sections.analysis_config.ui_fields.activity_summary_interval_hours]
ui_widget = "slider"
ui_step = 1
ui_unit = "小时"
ui_help = "定期生成用户活动模式摘要"