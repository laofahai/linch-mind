[tool.poetry]
name = "linch-mind"
version = "0.2.0"
description = "Privacy-first Personal AI Assistant - Monorepo"
authors = ["laofahai <laofahai@gmail.com>"]
readme = "README.md"
packages = [
    {include = "daemon"},
]

[tool.poetry.dependencies]
python = "^3.13"

# Core dependencies
pydantic = "^2.11.0"
pydantic-settings = "^2.5.0"
sqlalchemy = "^2.0.0"
watchdog = "^6.0.0"
psutil = "^7.0.0"
python-multipart = "^0.0.20"
cryptography = "^42.0.0"
pyyaml = "^6.0.0"
jsonschema = "^4.17.0"
aiofiles = "^24.1.0"

# AI and ML dependencies
faiss-cpu = "^1.8.0"
sentence-transformers = "^3.3.0"
networkx = "^3.4.0"
scikit-learn = "^1.6.0"
numpy = "^2.0.0"

[tool.poetry.group.dev.dependencies]
# Testing framework
pytest = "^8.0.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
pytest-xdist = "^3.6.0"

# Code formatting and linting
black = "^24.0.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
autoflake = "^2.3.1"
pre-commit = "^3.6.0"

# Documentation
mkdocs = "^1.5.0"
mkdocs-material = "^9.4.0"

[tool.poetry.group.test.dependencies]
pytest-benchmark = "^4.0.0"
pytest-html = "^4.1.0"
coverage = "^7.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
linch-mind = "daemon.main:main"
linch-daemon = "daemon.main:main"
linch-test = "daemon.run_tests:main"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | ui/
    | connectors/
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
skip = ["ui", "connectors"]

[tool.flake8]
max-line-length = 88
extend-ignore = "E203,W503"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "ui",
    "connectors"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "daemon/tests",
]
python_files = [
    "test_*.py",
    "*_test.py"
]
python_functions = [
    "test_*"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["daemon"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]